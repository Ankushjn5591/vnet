# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

stages:
  - stage:  tfvalidate
    jobs:
      - job:  validate
        continueOnError: false
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'myfirstserviceconnection'
              backendAzureRmResourceGroupName: 'Storagerg'
              backendAzureRmStorageAccountName: 'storageaccount5591'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'vnetpeering.terraform.tfstate'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'validate'
  - stage: tfdeploy
    condition:  succeeded('tfvalidate')
    dependsOn:  tfvalidate
    jobs:
      - job:  apply
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'myfirstserviceconnection'
              backendAzureRmResourceGroupName: 'Storagerg'
              backendAzureRmStorageAccountName: 'storageaccount5591'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'vneetpeering.terraform.tfstate'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'myfirstserviceconnection'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: 'myfirstserviceconnection'

